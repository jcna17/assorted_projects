# -*- coding: utf-8 -*-
"""
Created on Wed Dec 11 11:39:53 2019

@author: jakec
"""
import glob
import os
from dbfread import DBF
from matplotlib import pyplot as plt


"""
Input: Path to folder containing DBF files
Output: Folder containing graphs of elevation (ft) vs. distance (miles)
Preconditions: 
DBF files are profile tables generated by arcGIS
Profile tables generated by arcGIS were made with feature classes where each row represents a single continius polyline
File base names are in camel case (ThisIsCamelCase)
"""
def BulkElevationProfile(dbf_path, chart_path):
    #creates folder that will store created elevation profiles if it doesn't already exist
    if os.path.exists(chart_path) == False:
        os.mkdir(chart_path)
    #finds all DBF files and adds their path to the list dbf_files
    dbf_files = glob.glob(os.path.join(dbf_path, "*.dbf"))
    #iterates through every dbf file in the list dbf_file 
    for sample_dbf in dbf_files:
        #creates blank lists to be populated with distance and elevation data 
        distance = []
        elevation = []
        #iterates through every row in single DBF file
        #appends distance and elevation to appropriate lists
        for row in DBF(sample_dbf):
            distance.append(row['FIRST_DIST'] * 0.000621371)
            elevation.append(row['FIRST_Z'] * 3.28084)
        
            
        #generate file saved name (camel case)
        title = os.path.join(chart_path, os.path.basename(sample_dbf[:-4]))
#       #generate title for plot (spaces)
        def UndoCamelCase(title):
            name_list = list(os.path.basename(title))
            name_list_spaced = []
            for character in name_list:
                if character == character.upper() and character.isdigit() == False:
                    name_list_spaced.append(" ")
                    name_list_spaced.append(character)
                else:
                    name_list_spaced.append(character)
            spaced_title = ""
            for character in name_list_spaced:
                spaced_title += character
            return spaced_title
        
        
        #create elevation profile
        plt.plot(distance, elevation)
        plt.xlabel("Distance (miles)")
        plt.ylabel("Elevation (feet)")
        plt.title(UndoCamelCase(title))
        plt.savefig(title)
        plt.show()
    

#path to folder where DBF files are stored
dbf_path = r"C:\Users\jakec\Documents\Python\Projects\Elevation_Profile_Generator\Profile_Tables_DBF"
#path to folder where elevation profiles are exported
chart_path = r"C:\Users\jakec\Documents\Python\Projects\Elevation_Profile_Generator\Profiles"

#Runs BulkElevationProfile function
BulkElevationProfile(dbf_path, chart_path)






            
        

    
    
    

